// Anagrams 

/*

Given two strings, a and b , that may or may not be of the same length, determine the minimum number of character deletions required to make a and b anagrams. Any characters can be deleted from either of the strings.

Input :

    test cases,t
    two strings a and b, for each test case

Output:

Desired O/p

Constraints :

string lengths<=10000

Note :

Anagram of a word is formed by rearranging the letters of the word.

For e.g. -> For the word RAM - MAR,ARM,AMR,RMA etc. are few anagrams.
SAMPLE INPUT

1
cde
abc

SAMPLE OUTPUT

4

Time Limit: 1.0 sec(s) for each input file.
Memory Limit: 256 MB
Source Limit: 1024 KB 
*/

    import java.util.*;
     
    class TestClass {
        public static void main(String args[] ) throws Exception {
              int del= 0;
     
    		  Scanner scan = new Scanner(System.in);
    		  int test = scan.nextInt();
    		  
    		   for(int z= 0; z< test; z++)
              {
                  del= 0;
                  
                 String s1= scan.next();
    		     String s2= scan.next();
    	        
    	        char[] carr1 = s1.toCharArray(); 
    	        char[] carr2 = s2.toCharArray(); 
     
              for(int i= 0; i< carr1.length; i++)
              {
                  for(int j= 0; j< carr2.length; j++)
                  {
                    if(carr1[i] == carr2[j])
                     {
                      carr2[j]= '0';
                      del++;
                      break;
                     }
                  }      
              }
     
                System.out.println((carr1.length + carr2.length) - 2*del);
              }
    	}
    }